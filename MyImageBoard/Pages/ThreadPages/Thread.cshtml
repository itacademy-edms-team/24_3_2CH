@page "{id:int}"
@model MyImageBoard.Pages.ThreadPages.ThreadModel
@{
    ViewData["Title"] = Model.Thread?.Title ?? "Thread";
}

<h1>@Model.Thread.Title</h1>

<div class="thread-content">
    <p>@Model.Thread.Text</p>

    @if (Model.Thread.Images != null && Model.Thread.Images.Any())
    {
        <h3>Images:</h3>
        <div class="image-gallery">
            @foreach (var image in Model.Thread.Images)
            {
                <img src="@image.ImageUrl" alt="Thread image" class="thread-image" data-bs-toggle="modal" data-bs-target="#imageModal" data-bs-image="@image.ImageUrl" />
            }
        </div>
    }
</div>

<h2>Comments</h2>
@if (Model.Comments == null || !Model.Comments.Any())
{
    <p>No comments yet.</p>
}
else
{
    <div class="comments-list">
        @foreach (var comment in Model.Comments)
        {
            <div class="comment-item">
                <p>@comment.Text</p>
                @if (comment.Images != null && comment.Images.Any())
                {
                    <div class="image-gallery">
                        @foreach (var image in comment.Images)
                        {
                            <img src="@image.ImageUrl" alt="Comment image" class="thread-image" data-bs-toggle="modal" data-bs-target="#imageModal" data-bs-image="@image.ImageUrl" />
                        }
                    </div>
                }
            </div>
        }
    </div>
}

<h3>Add a Comment</h3>
<form method="post" enctype="multipart/form-data">
    <div class="form-group">
        <textarea name="CommentText" class="form-control" rows="3" placeholder="Write your comment..."></textarea>
    </div>
    <div class="form-group">
        <label for="commentImage">Attach Image:</label>
        <input type="file" id="commentImage" name="CommentImage" class="form-control" accept="image/*" />
    </div>
    <button type="submit" class="btn btn-primary">Отправить в тред</button>
</form>

@if (!string.IsNullOrEmpty(Model.Message))
{
    <div class="alert alert-success" style="margin-top: 20px;">
        @Model.Message
    </div>
}
@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger" style="margin-top: 20px;">
        @Model.ErrorMessage
    </div>
}

<!-- Модальное окно Bootstrap -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <img src="" id="modalImage" class="modal-image" alt="Full screen image" />
            </div>
        </div>
    </div>
</div>

<style>
    .thread-content {
        margin-bottom: 20px;
    }

    .image-gallery {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-top: 10px;
    }

    .thread-image {
        max-width: 200px;
        height: auto;
        border: 1px solid #ccc;
        border-radius: 3px;
        cursor: pointer;
    }

    .comments-list {
        margin-top: 20px;
    }

    .comment-item {
        border: 1px solid #ddd;
        padding: 10px;
        margin-bottom: 10px;
        border-radius: 5px;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        width: 100%;
        max-width: 500px;
    }

    .btn {
        margin-top: 10px;
    }

    .modal-dialog {
        max-width: none;
    }

    .modal-content {
        background-color: transparent;
        border: none;
    }

    .modal-body {
        padding: 0;
    }

    .modal-image {
        display: block;
        max-width: 90vw;
        max-height: 90vh;
        width: auto;
        height: auto;
        object-fit: contain;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const modal = document.getElementById('imageModal');
        const modalImage = document.getElementById('modalImage');
        const modalDialog = document.querySelector('#imageModal .modal-dialog');

        modal.addEventListener('show.bs.modal', (event) => {
            const imageUrl = event.relatedTarget.getAttribute('data-bs-image');
            modalImage.src = imageUrl;

            modalImage.onload = () => {
                const imgWidth = modalImage.naturalWidth;
                const imgHeight = modalImage.naturalHeight;
                const maxWidth = window.innerWidth * 0.9;
                const maxHeight = window.innerHeight * 0.9;

                let newWidth = imgWidth;
                let newHeight = imgHeight;
                if (newWidth > maxWidth) {
                    newHeight = (maxWidth / newWidth) * newHeight;
                    newWidth = maxWidth;
                }
                if (newHeight > maxHeight) {
                    newWidth = (maxHeight / newHeight) * newWidth;
                    newHeight = maxHeight;
                }

                modalDialog.style.width = `${newWidth}px`;
                modalDialog.style.height = `${newHeight}px`;
            };
        });

        modal.addEventListener('hidden.bs.modal', () => {
            modalDialog.style.width = '';
            modalDialog.style.height = '';
        });
    });
</script>